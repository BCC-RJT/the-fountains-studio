export const runtime = 'nodejs';

import { NextRequest, NextResponse } from 'next/server';
import nodemailer from 'nodemailer';
import { verifyCaptcha } from '../captcha/route';

function isEmail(v: string) {
  return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(v);
}

export async function POST(req: NextRequest) {
  try {
    const { name, email, phone, message, captchaAnswer, captchaToken } = await req.json();

    // All fields required
    if (!name || !email || !phone || !message || !captchaAnswer || !captchaToken) {
      return NextResponse.json({ ok: false, error: 'All fields are required.' }, { status: 400 });
    }
    if (!isEmail(email)) {
      return NextResponse.json({ ok: false, error: 'Invalid email address.' }, { status: 400 });
    }

    // Verify CAPTCHA
    const ok = verifyCaptcha(captchaToken, captchaAnswer);
    if (!ok) {
      return NextResponse.json({ ok: false, error: 'CAPTCHA failed. Please try again.' }, { status: 400 });
    }

    // Prepare transporter
    const host = process.env.SMTP_HOST!;
    const port = Number(process.env.SMTP_PORT ?? 587);
    const user = process.env.SMTP_USER!;
    const pass = process.env.SMTP_PASS!;
    const secure = String(process.env.SMTP_SECURE ?? 'false') === 'true';
    const to = process.env.CONTACT_TO!;
    const from = process.env.CONTACT_FROM ?? user;

    if (!host || !user || !pass || !to) {
      return NextResponse.json({ ok: false, error: 'Email is not configured.' }, { status: 500 });
    }

    const transporter = nodemailer.createTransport({
      host,
      port,
      secure,
      auth: { user, pass },
    });

    const subject = `The Fountains Website Inquiry â€“ ${name}`;
    const html = `
      <h2>New Inquiry from The Fountains website</h2>
      <p><strong>Name:</strong> ${escapeHtml(name)}</p>
      <p><strong>Email:</strong> ${escapeHtml(email)}</p>
      <p><strong>Phone:</strong> ${escapeHtml(phone)}</p>
      <p><strong>Message:</strong><br/>${escapeHtml(message).replace(/\n/g, '<br/>')}</p>
    `;

    await transporter.sendMail({
      from,
      to,
      subject,
      html,
      replyTo: email, // so you can reply directly to the visitor
    });

    return NextResponse.json({ ok: true });
  } catch (err) {
    console.error(err);
    return NextResponse.json({ ok: false, error: 'Unexpected error.' }, { status: 500 });
  }
}

function escapeHtml(str: string) {
  return String(str)
    .replaceAll('&', '&amp;')
    .replaceAll('<', '&lt;')
    .replaceAll('>', '&gt;')
    .replaceAll('"', '&quot;')
    .replaceAll("'", '&#039;');
}
